version: '3.2'

services:
  mongo:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: "ORDER_MANAGEMENT"
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      ADMIN_EMAIL: ""
      ADMIN_PASS: ""
    volumes:
      - "./database/init/:/docker-entrypoint-initdb.d/"
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  api:
    build:
      context: ./api/
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    volumes:
      - "./api/src/:/usr/src/app/src/"
      - "/usr/src/app/node_modules/"
    depends_on:
      - mongo
    environment:
      NODE_ENV: "docker"
      DATABASE_HOST: "mongodb://mongo:27017/ORDER_MANAGEMENT"
      DATABASE_NAME: "ORDER_MANAGEMENT"
      DATABASE_USER: "app"
      DATABASE_PASSWORD: "app_secret"
      EMAIL_SMTP_SERVER: ""
      EMAIL_USER: ""
      EMAIL_PASS: ""
      HASH_ALGORITHM: "sha512"
      COOKIE_DOMAIN: "localhost"
      PRIVATE_KEY: ""
      PUBLIC_KEY: ""

  webapp:
    build:
      context: ./webapp/
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: "/api"
      REACT_APP_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANkPLq0Y3dD3q2l6uVQBIv11P7x4SQEVjf6XDpP6UgTftzBOcRoINpfGiGLYH2G3ObvrLlHOAfdAwInlduLD4RcCAwEAAQ==\n-----END PUBLIC KEY-----"
    volumes:
      - "./webapp/src/:/usr/src/app/src/"
      - "./webapp/public/:/usr/src/app/public/"
      - "/usr/src/app/node_modules/"
    stdin_open: true
    depends_on:
      - api

  dev_proxy:
    build:
      context: ./dev_proxy/
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "80:80/tcp"
    environment:
      API_HOST: "api:3000"
      REACT_HOST: "webapp:3000"
      DOMAIN: "localhost"
    depends_on:
      - api
      - webapp
    